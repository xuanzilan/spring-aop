<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--注册目标类-->
    <bean id="studentServiceTarget" class="com.xuanzilan.ssm.spring4Aop.service.impl.StudentServiceImpl"/>
    <bean id="student" class="com.xuanzilan.ssm.spring4Aop.bean.Student"/>


    <!--注册advice-->
    <bean id="myMethodBeforeAdvice" class="com.xuanzilan.ssm.spring4Aop.service.advice.myMethodBeforeAdvice"/>
    <bean id="myAfterReturningAdvice" class="com.xuanzilan.ssm.spring4Aop.service.advice.myAfterReturnAdvice"/>
    <bean id="myMethodInterceptor" class="com.xuanzilan.ssm.spring4Aop.service.advice.myMethodInterceptor"/>
    <bean id="myThrowsAdvice" class="com.xuanzilan.ssm.spring4Aop.service.advice.myThrowsAdvice"/>

    <!--注册代理工厂类-->
    <!--需要三个，目标方法，实现的接口，advice通知-->
    <!--注掉了接口也能使用，当目标类有接口时，aop底层使用了jdk动态代理，没有接口时自动使用了cglib代理-->
    <!--interceptorNames这里是s，所以可以传入多个-->
    <bean id="studentServiceProxyFactory" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="studentServiceTarget"></property>
        <!--<property name="interfaces" value="com.xuanzilan.ssm.spring4Aop.service.IStudentService"></property>-->
        <property name="interceptorNames" value="myMethodBeforeAdvice,myAfterReturningAdvice,myMethodInterceptor,myThrowsAdvice"/>
    </bean>


</beans>